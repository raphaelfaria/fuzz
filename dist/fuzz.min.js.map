{"version":3,"sources":["fuzz.min.js","/source/fuzz.js","/source/src/item.js","/source/src/fuzz.js"],"names":["_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","_get","_x2","_x3","_x4","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","getter","get","call","parent","getPrototypeOf","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","global","factory","exports","module","define","amd","Fuzz","this","Item","name","index","mainIndex","weight","detailedArray","_prepareItem","indexIsSectionStart","string","toUpperCase","split","map","char","arr","beginSection","matchIndex","searchIndex","lookUpper","testName","lowerTestName","toLowerCase","currentChar","charAt","indexOf","push","matched","calculateWeight","_this","substringSize","reduce","Math","pow","_Array","collection","arguments","main","apply","_prepareCollection","item","_this2","parse","query","replace","results","filter","calcMatch","console","log","sort","a","b","Array","fuzz"],"mappings":"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","file":"fuzz.min.js","sourcesContent":["var _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Fuzz = factory();\n})(this, function () {\n  'use strict';\n\n  var Item = (function () {\n    function Item(name, index) {\n      _classCallCheck(this, Item);\n\n      this.name = name;\n      this.mainIndex = index;\n      this.weight = 0;\n      this.detailedArray = this._prepareItem();\n    }\n\n    _createClass(Item, [{\n      key: '_prepareItem',\n      value: function _prepareItem() {\n        function indexIsSectionStart(string, index) {\n          return index === 0 || string[index].toUpperCase() === string[index] && (index === 1 || string[index - 1].toUpperCase() !== string[index - 1]);\n        }\n\n        return this.name.split('').map(function (char, index, arr) {\n          return {\n            index: index,\n            char: char,\n            beginSection: indexIsSectionStart(arr, index),\n            weight: 0\n          };\n        });\n      }\n    }, {\n      key: 'calcMatch',\n      value: function calcMatch(string) {\n        var matchIndex = [];\n        var searchIndex = -1;\n        var lookUpper = true;\n        var testName = this.name;\n        var lowerTestName = this.name.toLowerCase();\n\n        for (var i = 0; i < string.length; i++) {\n          var currentChar = string.charAt(i);\n\n          if (lookUpper) {\n            testName = this.name;\n            currentChar = currentChar.toUpperCase();\n          }\n\n          if (!lookUpper) {\n            testName = lowerTestName;\n          }\n\n          if (searchIndex >= this.name.length) {\n            return false;\n          }\n\n          searchIndex = testName.indexOf(currentChar, searchIndex + 1);\n\n          if (searchIndex > -1) {\n            matchIndex.push(searchIndex);\n          } else {\n            if (lookUpper === false) {\n              matchIndex = [];\n              break;\n            }\n\n            if (lookUpper === true) {\n              i -= 1;\n              searchIndex = matchIndex[matchIndex.length - 1] || -1;\n            }\n\n            lookUpper = !lookUpper;\n          }\n        }\n\n        this.matched = matchIndex;\n\n        // Calculate rank\n        this.calculateWeight();\n\n        return !!this.matched.length;\n      }\n    }, {\n      key: 'calculateWeight',\n      value: function calculateWeight() {\n        var _this = this;\n\n        var substringSize = 0;\n\n        this.weight = this.matched.reduce(function (weight, matchIndex, index) {\n          if (_this.detailedArray[matchIndex].beginSection === true) {\n            _this.detailedArray[matchIndex].weight = 80 - matchIndex;\n            weight += _this.detailedArray[matchIndex].weight;\n\n            if (_this.matched[index - 1] == matchIndex - 1) {\n              substringSize++;\n              _this.detailedArray[matchIndex].weight += 15 * Math.pow(2, substringSize) - matchIndex;\n              weight += _this.detailedArray[matchIndex].weight;\n            }\n          } else if (_this.matched[index - 1] == matchIndex - 1) {\n            substringSize++;\n            _this.detailedArray[matchIndex].weight = 15 * Math.pow(2, substringSize) - matchIndex;\n            weight += _this.detailedArray[matchIndex].weight;\n          } else {\n            _this.detailedArray[matchIndex].weight = 10 - matchIndex;\n            weight += _this.detailedArray[matchIndex].weight;\n          }\n\n          weight -= _this.name.length - 1 - _this.matched[_this.matched.length - 1];\n\n          return weight;\n        }, 0);\n\n        return this;\n      }\n    }]);\n\n    return Item;\n  })();\n\n  var Fuzz = (function (_Array) {\n    _inherits(Fuzz, _Array);\n\n    function Fuzz(collection) {\n      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      _classCallCheck(this, Fuzz);\n\n      _get(Object.getPrototypeOf(Fuzz.prototype), 'constructor', this).call(this);\n      this.main = collection;\n      this.push.apply(this, this._prepareCollection());\n    }\n\n    _createClass(Fuzz, [{\n      key: 'parse',\n      value: function parse(item) {\n        return item;\n      }\n    }, {\n      key: '_prepareCollection',\n      value: function _prepareCollection() {\n        var _this2 = this;\n\n        return this.main.map(function (item, i) {\n          return new Item(_this2.parse(item), i);\n        });\n      }\n    }, {\n      key: 'match',\n      value: function match(string) {\n        var query = string.replace(/\\s+/g, '').toLowerCase();\n        var results = this.filter(function (item) {\n          return item.calcMatch(query);\n        });\n        console.log(results);\n        return results.sort(function (a, b) {\n          if (a.weight > b.weight) {\n            return -1;\n          }\n\n          if (a.weight < b.weight) {\n            return 1;\n          }\n\n          return 0;\n        });\n      }\n    }]);\n\n    return Fuzz;\n  })(Array);\n\n  var fuzz = Fuzz;\n\n  return fuzz;\n});\n//# sourceMappingURL=fuzz.js.map\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.Fuzz = factory()\n}(this, function () { 'use strict';\n\n  class Item {\n    constructor(name, index) {\n      this.name = name;\n      this.mainIndex = index;\n      this.weight = 0;\n      this.detailedArray = this._prepareItem();\n    }\n\n    _prepareItem() {\n      function indexIsSectionStart(string, index) {\n        return index === 0 ||\n          (string[index].toUpperCase() === string[index] &&\n            (index === 1 ||\n              string[index - 1].toUpperCase() !== string[index - 1]));\n      }\n\n      return this.name.split('').map((char, index, arr) => {\n        return {\n          index,\n          char,\n          beginSection: indexIsSectionStart(arr, index),\n          weight: 0\n        };\n      });\n    }\n\n    calcMatch(string) {\n      var matchIndex = [];\n      var searchIndex = -1;\n      var lookUpper = true;\n      var testName = this.name;\n      var lowerTestName = this.name.toLowerCase();\n\n      for (var i = 0; i < string.length; i++) {\n        var currentChar = string.charAt(i);\n\n        if (lookUpper) {\n          testName = this.name;\n          currentChar = currentChar.toUpperCase();\n        }\n\n        if (!lookUpper) {\n          testName = lowerTestName;\n        }\n\n        if (searchIndex >= this.name.length) {\n          return false;\n        }\n\n        searchIndex = testName.indexOf(currentChar, searchIndex + 1);\n\n        if (searchIndex > -1) {\n          matchIndex.push(searchIndex);\n        } else {\n          if (lookUpper === false) {\n            matchIndex = [];\n            break;\n          }\n\n          if (lookUpper === true) {\n            i -= 1;\n            searchIndex = matchIndex[matchIndex.length - 1] || -1;\n          }\n\n          lookUpper = !lookUpper;\n        }\n      }\n\n      this.matched = matchIndex;\n\n      // Calculate rank\n      this.calculateWeight();\n\n      return !!(this.matched.length);\n    }\n\n    calculateWeight() {\n      let substringSize = 0;\n\n      this.weight = this.matched.reduce((weight, matchIndex, index) => {\n        if (this.detailedArray[matchIndex].beginSection === true) {\n          this.detailedArray[matchIndex].weight = (80 - matchIndex);\n          weight += this.detailedArray[matchIndex].weight;\n\n          if (this.matched[index - 1] == matchIndex - 1) {\n            substringSize++;\n            this.detailedArray[matchIndex].weight += 15 * Math.pow(2, substringSize) - matchIndex;\n            weight += this.detailedArray[matchIndex].weight;\n          }\n        } else if (this.matched[index - 1] == matchIndex - 1) {\n          substringSize++;\n          this.detailedArray[matchIndex].weight = 15 * Math.pow(2, substringSize) - matchIndex;\n          weight += this.detailedArray[matchIndex].weight;\n        } else {\n          this.detailedArray[matchIndex].weight = 10 - matchIndex;\n          weight += this.detailedArray[matchIndex].weight;\n        }\n\n        weight -= ((this.name.length - 1) - this.matched[this.matched.length - 1]);\n\n        return weight;\n\n      }, 0);\n\n      return this;\n    }\n  }\n\n  class Fuzz extends Array {\n    constructor(collection, options = {}) {\n      super();\n      this.main = collection;\n      this.push.apply(this, this._prepareCollection());\n    }\n\n    parse(item) {\n      return item;\n    }\n\n    _prepareCollection() {\n      return this.main.map((item, i) => {\n        return new Item(this.parse(item), i);\n      });\n    }\n\n    match(string) {\n      let query = string.replace(/\\s+/g, '').toLowerCase();\n      let results = this.filter(item => item.calcMatch(query));\n      console.log(results);\n      return results.sort((a, b) => {\n        if (a.weight > b.weight) {\n          return -1;\n        }\n\n        if (a.weight < b.weight) {\n          return 1;\n        }\n\n        return 0;\n      });\n    }\n  }\n\n  var fuzz = Fuzz;\n\n  return fuzz;\n\n}));\n","class Item {\n  constructor(name, index) {\n    this.name = name;\n    this.mainIndex = index;\n    this.weight = 0;\n    this.detailedArray = this._prepareItem();\n  }\n\n  _prepareItem() {\n    function indexIsSectionStart(string, index) {\n      return index === 0 ||\n        (string[index].toUpperCase() === string[index] &&\n          (index === 1 ||\n            string[index - 1].toUpperCase() !== string[index - 1]));\n    }\n\n    return this.name.split('').map((char, index, arr) => {\n      return {\n        index,\n        char,\n        beginSection: indexIsSectionStart(arr, index),\n        weight: 0\n      };\n    });\n  }\n\n  calcMatch(string) {\n    var matchIndex = [];\n    var searchIndex = -1;\n    var lookUpper = true;\n    var testName = this.name;\n    var lowerTestName = this.name.toLowerCase();\n\n    for (var i = 0; i < string.length; i++) {\n      var currentChar = string.charAt(i);\n\n      if (lookUpper) {\n        testName = this.name;\n        currentChar = currentChar.toUpperCase();\n      }\n\n      if (!lookUpper) {\n        testName = lowerTestName;\n      }\n\n      if (searchIndex >= this.name.length) {\n        return false;\n      }\n\n      searchIndex = testName.indexOf(currentChar, searchIndex + 1);\n\n      if (searchIndex > -1) {\n        matchIndex.push(searchIndex);\n      } else {\n        if (lookUpper === false) {\n          matchIndex = [];\n          break;\n        }\n\n        if (lookUpper === true) {\n          i -= 1;\n          searchIndex = matchIndex[matchIndex.length - 1] || -1;\n        }\n\n        lookUpper = !lookUpper;\n      }\n    }\n\n    this.matched = matchIndex;\n\n    // Calculate rank\n    this.calculateWeight();\n\n    return !!(this.matched.length);\n  }\n\n  calculateWeight() {\n    let substringSize = 0;\n\n    this.weight = this.matched.reduce((weight, matchIndex, index) => {\n      if (this.detailedArray[matchIndex].beginSection === true) {\n        this.detailedArray[matchIndex].weight = (80 - matchIndex);\n        weight += this.detailedArray[matchIndex].weight;\n\n        if (this.matched[index - 1] == matchIndex - 1) {\n          substringSize++;\n          this.detailedArray[matchIndex].weight += 15 * Math.pow(2, substringSize) - matchIndex;\n          weight += this.detailedArray[matchIndex].weight;\n        }\n      } else if (this.matched[index - 1] == matchIndex - 1) {\n        substringSize++;\n        this.detailedArray[matchIndex].weight = 15 * Math.pow(2, substringSize) - matchIndex;\n        weight += this.detailedArray[matchIndex].weight;\n      } else {\n        this.detailedArray[matchIndex].weight = 10 - matchIndex;\n        weight += this.detailedArray[matchIndex].weight;\n      }\n\n      weight -= ((this.name.length - 1) - this.matched[this.matched.length - 1]);\n\n      return weight;\n\n    }, 0);\n\n    return this;\n  }\n}\n\nexport default Item;\n","import Item from './item';\n\nclass Fuzz extends Array {\n  constructor(collection, options = {}) {\n    super();\n    this.main = collection;\n    this.push.apply(this, this._prepareCollection());\n  }\n\n  parse(item) {\n    return item;\n  }\n\n  _prepareCollection() {\n    return this.main.map((item, i) => {\n      return new Item(this.parse(item), i);\n    });\n  }\n\n  match(string) {\n    let query = string.replace(/\\s+/g, '').toLowerCase();\n    let results = this.filter(item => item.calcMatch(query));\n    console.log(results);\n    return results.sort((a, b) => {\n      if (a.weight > b.weight) {\n        return -1;\n      }\n\n      if (a.weight < b.weight) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }\n}\n\nexport default Fuzz;\n"],"sourceRoot":"/source/"}
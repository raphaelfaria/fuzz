{"version":3,"sources":["fuzz.min.js","/source/fuzz.js","/source/src/fuzz.js","/source/src/item.js","/source/src/result.js"],"names":["_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","_get","_x2","_x3","_x4","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","getter","get","call","parent","getPrototypeOf","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","global","factory","exports","module","define","amd","Fuzz","this","sortByWeight","a","b","weight","Item","name","index","mainIndex","_detailedArray","_prepareItem","indexIsSectionStart","string","toUpperCase","split","map","char","arr","beginSection","matchIndex","searchIndex","lookUpper","l","lowerTestName","toLowerCase","currentChar","charAt","indexOf","push","_matched","calculateWeight","_this","substringSize","reduce","Math","pow","Result","_Array","items","meta","apply","_len","arguments","Array","_key","item","_Array2","collection","main","_prepareCollection","_this2","parse","query","replace","resultArray","filter","calcMatch","sort","match","fuzz","_fuzz"],"mappings":"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","file":"fuzz.min.js","sourcesContent":["var _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Fuzz = factory();\n})(this, function () {\n  'use strict';\n\n  var Item = (function () {\n    function Item(name, index) {\n      _classCallCheck(this, Item);\n\n      this.name = name;\n      this.mainIndex = index;\n      this.weight = 0;\n      this._detailedArray = this._prepareItem();\n    }\n\n    _createClass(Item, [{\n      key: '_prepareItem',\n      value: function _prepareItem() {\n        function indexIsSectionStart(string, index) {\n          return index === 0 || string[index].toUpperCase() === string[index] && (index === 1 || string[index - 1].toUpperCase() !== string[index - 1]);\n        }\n\n        return this.name.split('').map(function (char, index, arr) {\n          return {\n            index: index,\n            char: char,\n            beginSection: indexIsSectionStart(arr, index),\n            weight: 0\n          };\n        });\n      }\n    }, {\n      key: 'calcMatch',\n      value: function calcMatch(string) {\n        var matchIndex = [];\n        var searchIndex = -1;\n        var lookUpper = true;\n        var testName = this.name;\n\n        var l = string.length;\n        var lowerTestName = this.name.toLowerCase();\n\n        for (var i = 0; i < l; i++) {\n          var currentChar = string.charAt(i);\n\n          if (searchIndex >= this.name.length) {\n            return false;\n          }\n\n          searchIndex = (lookUpper ? this.name : lowerTestName).indexOf(lookUpper ? currentChar.toUpperCase() : currentChar, searchIndex + 1);\n\n          if (searchIndex > -1) {\n            matchIndex.push(searchIndex);\n            continue;\n          }\n\n          if (!lookUpper) {\n            matchIndex = [];\n            break;\n          }\n\n          i -= 1;\n          searchIndex = matchIndex[matchIndex.length - 1] || -1;\n          lookUpper = !lookUpper;\n        }\n\n        this._matched = matchIndex;\n\n        // Calculate rank\n        this.calculateWeight();\n\n        return !!this._matched.length;\n      }\n    }, {\n      key: 'calculateWeight',\n      value: function calculateWeight() {\n        var _this = this;\n\n        var substringSize = 0;\n\n        this.weight = this._matched.reduce(function (weight, matchIndex, index) {\n          if (_this._detailedArray[matchIndex].beginSection === true) {\n            _this._detailedArray[matchIndex].weight = 80 - matchIndex;\n            weight += _this._detailedArray[matchIndex].weight;\n\n            if (_this._matched[index - 1] == matchIndex - 1) {\n              substringSize++;\n              _this._detailedArray[matchIndex].weight += 15 * Math.pow(2, substringSize) - matchIndex;\n              weight += _this._detailedArray[matchIndex].weight;\n            }\n          } else if (_this._matched[index - 1] == matchIndex - 1) {\n            substringSize++;\n            _this._detailedArray[matchIndex].weight = 15 * Math.pow(2, substringSize) - matchIndex;\n            weight += _this._detailedArray[matchIndex].weight;\n          } else {\n            _this._detailedArray[matchIndex].weight = 10 - matchIndex;\n            weight += _this._detailedArray[matchIndex].weight;\n          }\n\n          weight -= _this.name.length - 1 - _this._matched[_this._matched.length - 1];\n\n          return weight;\n        }, 0);\n\n        return this;\n      }\n    }]);\n\n    return Item;\n  })();\n\n  var Result = (function (_Array) {\n    _inherits(Result, _Array);\n\n    function Result(items) {\n      _classCallCheck(this, Result);\n\n      _get(Object.getPrototypeOf(Result.prototype), 'constructor', this).call(this);\n\n      this.meta = [];\n\n      if (items.length) {\n        this.push.apply(this, items);\n      }\n    }\n\n    _createClass(Result, [{\n      key: 'push',\n      value: function push() {\n        for (var _len = arguments.length, items = Array(_len), _key = 0; _key < _len; _key++) {\n          items[_key] = arguments[_key];\n        }\n\n        _get(Object.getPrototypeOf(Result.prototype), 'push', this).apply(this.meta, items);\n        return _get(Object.getPrototypeOf(Result.prototype), 'push', this).apply(this, items.map(function (item) {\n          return item.name;\n        }));\n      }\n    }]);\n\n    return Result;\n  })(Array);\n\n  function sortByWeight(a, b) {\n    if (a.weight > b.weight) {\n      return -1;\n    }\n\n    if (a.weight < b.weight) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  var Fuzz = (function (_Array2) {\n    _inherits(Fuzz, _Array2);\n\n    function Fuzz(collection) {\n      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      _classCallCheck(this, Fuzz);\n\n      _get(Object.getPrototypeOf(Fuzz.prototype), 'constructor', this).call(this);\n      this.push.apply(this, collection);\n      this.main = this._prepareCollection();\n    }\n\n    _createClass(Fuzz, [{\n      key: 'parse',\n      value: function parse(item) {\n        return item;\n      }\n    }, {\n      key: '_prepareCollection',\n      value: function _prepareCollection() {\n        var _this2 = this;\n\n        return this.map(function (item, i) {\n          return new Item(_this2.parse(item), i);\n        });\n      }\n    }, {\n      key: 'match',\n      value: function match(string) {\n        var query = string.replace(/\\s+/g, '').toLowerCase();\n\n        var resultArray = this.main.filter(function (item) {\n          return item.calcMatch(query);\n        }).sort(sortByWeight);\n\n        return new Result(resultArray);\n      }\n    }]);\n\n    return Fuzz;\n  })(Array);\n\n  Fuzz.match = function (string, collection) {\n    var fuzz = new Fuzz(collection);\n    return fuzz.match(string);\n  };\n\n  var _fuzz = Fuzz;\n\n  return _fuzz;\n});\n//# sourceMappingURL=fuzz.js.map\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.Fuzz = factory()\n}(this, function () { 'use strict';\n\n  class Item {\n    constructor(name, index) {\n      this.name = name;\n      this.mainIndex = index;\n      this.weight = 0;\n      this._detailedArray = this._prepareItem();\n    }\n\n    _prepareItem() {\n      function indexIsSectionStart(string, index) {\n        return index === 0 ||\n          (string[index].toUpperCase() === string[index] &&\n            (index === 1 ||\n              string[index - 1].toUpperCase() !== string[index - 1]));\n      }\n\n      return this.name.split('').map((char, index, arr) => {\n        return {\n          index,\n          char,\n          beginSection: indexIsSectionStart(arr, index),\n          weight: 0\n        };\n      });\n    }\n\n    calcMatch(string) {\n      let matchIndex = [];\n      let searchIndex = -1;\n      let lookUpper = true;\n      let testName = this.name;\n\n      const l = string.length;\n      const lowerTestName = this.name.toLowerCase();\n\n      for (let i = 0; i < l; i++) {\n        let currentChar = string.charAt(i);\n\n        if (searchIndex >= this.name.length) {\n          return false;\n        }\n\n        searchIndex = (lookUpper ? this.name : lowerTestName).indexOf(\n          lookUpper ? currentChar.toUpperCase() : currentChar,\n          searchIndex + 1\n        );\n\n        if (searchIndex > -1) {\n          matchIndex.push(searchIndex);\n          continue;\n        }\n\n        if (!lookUpper) {\n          matchIndex = [];\n          break;\n        }\n\n        i -= 1;\n        searchIndex = matchIndex[matchIndex.length - 1] || -1;\n        lookUpper = !lookUpper;\n      }\n\n      this._matched = matchIndex;\n\n      // Calculate rank\n      this.calculateWeight();\n\n      return !!(this._matched.length);\n    }\n\n    calculateWeight() {\n      let substringSize = 0;\n\n      this.weight = this._matched.reduce((weight, matchIndex, index) => {\n        if (this._detailedArray[matchIndex].beginSection === true) {\n          this._detailedArray[matchIndex].weight = (80 - matchIndex);\n          weight += this._detailedArray[matchIndex].weight;\n\n          if (this._matched[index - 1] == matchIndex - 1) {\n            substringSize++;\n            this._detailedArray[matchIndex].weight += 15 * Math.pow(2, substringSize) - matchIndex;\n            weight += this._detailedArray[matchIndex].weight;\n          }\n        } else if (this._matched[index - 1] == matchIndex - 1) {\n          substringSize++;\n          this._detailedArray[matchIndex].weight = 15 * Math.pow(2, substringSize) - matchIndex;\n          weight += this._detailedArray[matchIndex].weight;\n        } else {\n          this._detailedArray[matchIndex].weight = 10 - matchIndex;\n          weight += this._detailedArray[matchIndex].weight;\n        }\n\n        weight -= ((this.name.length - 1) - this._matched[this._matched.length - 1]);\n\n        return weight;\n\n      }, 0);\n\n      return this;\n    }\n  }\n\n  class Result extends Array {\n    constructor(items) {\n      super();\n\n      this.meta = [];\n\n      if (items.length) {\n        this.push.apply(this, items);\n      }\n    }\n\n    push(...items) {\n      super.push.apply(this.meta, items);\n      return super.push.apply(this, items.map(item => item.name));\n    }\n  }\n\n  function sortByWeight(a, b) {\n    if (a.weight > b.weight) {\n      return -1;\n    }\n\n    if (a.weight < b.weight) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  class Fuzz extends Array {\n    constructor(collection, options = {}) {\n      super();\n      this.push.apply(this, collection);\n      this.main = this._prepareCollection();\n\n    }\n\n    parse(item) {\n      return item;\n    }\n\n    _prepareCollection() {\n      return this.map((item, i) => {\n        return new Item(this.parse(item), i);\n      });\n    }\n\n    match(string) {\n      const query = string.replace(/\\s+/g, '').toLowerCase();\n\n      let resultArray = this.main\n        .filter(item => item.calcMatch(query))\n        .sort(sortByWeight);\n\n      return new Result(resultArray);\n    }\n  }\n\n  Fuzz.match = function(string, collection) {\n    var fuzz = new Fuzz(collection);\n    return fuzz.match(string);\n  };\n\n  var _fuzz = Fuzz;\n\n  return _fuzz;\n\n}));\n","import Item from './item';\nimport Result from './result';\n\nfunction sortByWeight(a, b) {\n  if (a.weight > b.weight) {\n    return -1;\n  }\n\n  if (a.weight < b.weight) {\n    return 1;\n  }\n\n  return 0;\n}\n\nclass Fuzz extends Array {\n  constructor(collection, options = {}) {\n    super();\n    this.push.apply(this, collection);\n    this.main = this._prepareCollection();\n\n  }\n\n  parse(item) {\n    return item;\n  }\n\n  _prepareCollection() {\n    return this.map((item, i) => {\n      return new Item(this.parse(item), i);\n    });\n  }\n\n  match(string) {\n    const query = string.replace(/\\s+/g, '').toLowerCase();\n\n    let resultArray = this.main\n      .filter(item => item.calcMatch(query))\n      .sort(sortByWeight);\n\n    return new Result(resultArray);\n  }\n}\n\nFuzz.match = function(string, collection) {\n  var fuzz = new Fuzz(collection);\n  return fuzz.match(string);\n};\n\nexport default Fuzz;\n","class Item {\n  constructor(name, index) {\n    this.name = name;\n    this.mainIndex = index;\n    this.weight = 0;\n    this._detailedArray = this._prepareItem();\n  }\n\n  _prepareItem() {\n    function indexIsSectionStart(string, index) {\n      return index === 0 ||\n        (string[index].toUpperCase() === string[index] &&\n          (index === 1 ||\n            string[index - 1].toUpperCase() !== string[index - 1]));\n    }\n\n    return this.name.split('').map((char, index, arr) => {\n      return {\n        index,\n        char,\n        beginSection: indexIsSectionStart(arr, index),\n        weight: 0\n      };\n    });\n  }\n\n  calcMatch(string) {\n    let matchIndex = [];\n    let searchIndex = -1;\n    let lookUpper = true;\n    let testName = this.name;\n\n    const l = string.length;\n    const lowerTestName = this.name.toLowerCase();\n\n    for (let i = 0; i < l; i++) {\n      let currentChar = string.charAt(i);\n\n      if (searchIndex >= this.name.length) {\n        return false;\n      }\n\n      searchIndex = (lookUpper ? this.name : lowerTestName).indexOf(\n        lookUpper ? currentChar.toUpperCase() : currentChar,\n        searchIndex + 1\n      );\n\n      if (searchIndex > -1) {\n        matchIndex.push(searchIndex);\n        continue;\n      }\n\n      if (!lookUpper) {\n        matchIndex = [];\n        break;\n      }\n\n      i -= 1;\n      searchIndex = matchIndex[matchIndex.length - 1] || -1;\n      lookUpper = !lookUpper;\n    }\n\n    this._matched = matchIndex;\n\n    // Calculate rank\n    this.calculateWeight();\n\n    return !!(this._matched.length);\n  }\n\n  calculateWeight() {\n    let substringSize = 0;\n\n    this.weight = this._matched.reduce((weight, matchIndex, index) => {\n      if (this._detailedArray[matchIndex].beginSection === true) {\n        this._detailedArray[matchIndex].weight = (80 - matchIndex);\n        weight += this._detailedArray[matchIndex].weight;\n\n        if (this._matched[index - 1] == matchIndex - 1) {\n          substringSize++;\n          this._detailedArray[matchIndex].weight += 15 * Math.pow(2, substringSize) - matchIndex;\n          weight += this._detailedArray[matchIndex].weight;\n        }\n      } else if (this._matched[index - 1] == matchIndex - 1) {\n        substringSize++;\n        this._detailedArray[matchIndex].weight = 15 * Math.pow(2, substringSize) - matchIndex;\n        weight += this._detailedArray[matchIndex].weight;\n      } else {\n        this._detailedArray[matchIndex].weight = 10 - matchIndex;\n        weight += this._detailedArray[matchIndex].weight;\n      }\n\n      weight -= ((this.name.length - 1) - this._matched[this._matched.length - 1]);\n\n      return weight;\n\n    }, 0);\n\n    return this;\n  }\n}\n\nexport default Item;\n","class Result extends Array {\n  constructor(items) {\n    super();\n\n    this.meta = [];\n\n    if (items.length) {\n      this.push.apply(this, items);\n    }\n  }\n\n  push(...items) {\n    super.push.apply(this.meta, items);\n    return super.push.apply(this, items.map(item => item.name));\n  }\n}\n\nexport default Result;\n"],"sourceRoot":"/source/"}